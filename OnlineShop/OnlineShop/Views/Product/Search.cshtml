
@{
    ViewBag.Title = "Tìm kiếm";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int dem = 1;
}
@model PagedList.IPagedList<OnlineShop.Models.EF.Product>
@using PagedList.Mvc

<div class="content">
    <div class="row">
        @if (TempData["add_success"] != null)
        {
            <div class="alert alert-success" id="AlertBox">
                @TempData["add_success"]
            </div>
        }
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card ">
                <div class="card-header">
                    <div class="col-md-3 pull-left">
                        <h4 class="card-title">Tìm kiếm : <span>@ViewBag.KeyWord</span></h4>
                    </div>
                    <div class="col-md-6 pull-left">
                        <form action="/Product/Search" method="get">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Tìm kiếm sản phẩm..." name="keyword" id="txtKeyword" required>
                                <div class="input-group-btn">
                                    <button class="btn btn-outline-secondary" type="submit"><i class="fa fa-search"></i></button>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-3 pull-right">
                        <a href="/Product/Add" class="btn btn-fill btn-primary"><i class="fa fa-plus"></i>Thêm mới</a>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table tablesorter " id="">
                            <thead class=" text-primary">
                                <tr>
                                    <th>#</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Hình ảnh</th>
                                    <th>Giá gốc</th>
                                    <th>Giá km</th>
                                    <th>Số lượng tồn</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@dem</td>
                                        <td>@item.Product_Name</td>
                                        <td><img src="~/Assets/img/product/@item.Image" alt="" width="110px" /></td>
                                        <td>@item.Promotion_Price.Value.ToString("N0")</td>
                                        @if (item.Price != null)
                                        {
                                            <td>@item.Price.Value.ToString("N0")</td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }

                                        <td>@item.Quantity</td>
                                        <td>
                                            <a href="/Product/Edit/@item.ID" class="btn btn-default" title="Sửa sản phẩm"><i class="fa fa-edit"></i></a>
                                            <button class="btn btn-danger btnDelete" data-id="@item.ID" title="Xóa sản phẩm"><i class="fa fa-times"></i></button>
                                        </td>
                                    </tr>
                                    dem++;
                                }
                            </tbody>
                        </table>
                        Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
                        <ul class="pagination">
                            @for (int i = 1; i <= Model.PageCount; i++)
                            {
                                <li class="@(i == Model.PageNumber ? "page-item active" : "page-item")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>

                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section jsAdmin{

    <script type="text/javascript">
        $(function () {
            //nếu không có thao tác gì thì ẩn đi
            $('#AlertBox').removeClass('hide');

            //Sau khi hiển thị lên thì delay 1s và cuộn lên trên sử dụng slideup
            $('#AlertBox').delay(2000).slideUp(500);


            $('.btnDelete').off('click').on('click', function () {
                const notice = PNotify.notice({
                    title: 'Thông báo',
                    text: 'Bạn thật sự muốn xóa?',
                    icon: 'fa fa-question-circle',
                    width: '360px',
                    minHeight: '110px',
                    hide: false,
                    closer: false,
                    sticker: false,
                    destroy: true,
                    stack: new PNotify.Stack({
                        dir1: 'down',
                        modal: true,
                        firstpos1: 25,
                        overlayClose: false
                    }),
                    modules: new Map([
                        ...PNotify.defaultModules,
                        [PNotifyConfirm, {
                            confirm: true
                        }]
                    ])
                });

                notice.on('pnotify:confirm', () =>
                    $.ajax({
                        data: { ID: $(this).data('id') },
                        url: '/Product/Delete',
                        dataType: 'Json',
                        type: 'POST',
                        success: function (res) {
                            if (res.status == true) {
                                window.location.href = "/Product";
                                PNotify.success({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa sản phẩm thành công.'
                                });
                            } else {

                                PNotify.error({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa sản phẩm KHÔNG thành công. Bạn vui lòng xóa chi tiết sản phẩm trước.'
                                });
                            }
                        }
                    })

                );


            });
        });

         var common = {
            init: function () {
                common.registerEvent();
            },
            registerEvent: function () {
                $("#txtKeyword").autocomplete({
                    minLength: 0,
                    source: function (request, response) {
                        $.ajax({
                            url: "/Product/ListName",//Link lấy dữ liệu gợi ý
                            dataType: "json",
                            data: {
                                q: request.term
                            },
                            success: function (res) {
                                response(res.data);
                                //response($.map(data, function (item) {
                                //    return {
                                //        value: item.Product_Name,
                                //        label: item.Image
                                //    }
                                //}));
                            }
                        });
                    },
                    focus: function (event, ui) {
                        $("#txtKeyword").val(ui.item.label);
                        return false;
                    },
                    select: function (event, ui) {
                        $("#txtKeyword").val(ui.item.label);
                        //$("#project-id").val(ui.item.value);
                        //$("#project-description").html(ui.item.desc);
                        //$("#project-icon").attr("src", "images/" + ui.item.icon);

                        return false;
                    }
                })
                    .autocomplete("instance")._renderItem = function (ul, item) {
                        return $("<li>")
                            //.append("<div>" + item.value + "<br>" + item.label + "</div>")
                            .append("<div>" + item.value + "</div>")
                            .appendTo(ul);
                    };
            }
        }
        common.init();
    </script>

}

