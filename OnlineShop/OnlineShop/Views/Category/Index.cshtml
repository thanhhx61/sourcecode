
@{
    ViewBag.Title = "Quản lý danh mục";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int dem = 1;
    var lstproduct = ViewBag.lstProduct as List<OnlineShop.Models.EF.Product>;
}
@model PagedList.IPagedList<OnlineShop.Models.EF.Category>
@using PagedList.Mvc

    <div class="content">
        <div class="row">
            @if (TempData["add_success"] != null)
            {
                <div class="alert alert-success" id="AlertBox">
                    @TempData["add_success"]
                </div>
            }
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="card ">
                    <div class="card-header">
                        <div class="pull-left">
                            <h4 class="card-title"> Danh sách danh mục</h4>
                        </div>
                        <div class="pull-right">
                            <button class="btn btn-lg btn-primary" data-toggle="modal" data-target="#addCate"><i class="fa fa-plus"></i>Thêm mới </button>
                        </div>

                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table tablesorter " id="">
                                <thead class=" text-primary">
                                    <tr>
                                        <th>#</th>
                                        <th class="text-center">Tên danh mục</th>
                                        <th class="text-center">Số sản phẩm</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@dem</td>
                                            <td class="text-center">@item.Name</td>
                                            <td class="text-center">@lstproduct.Count(x => x.Category_ID == item.ID)</td>
                                            <td>
                                                <button class="btn btn-default btnEdit" data-id="@item.ID" title="Sửa danh mục"><i class="fa fa-edit"></i>Sửa</button>
                                                <button class="btn btn-danger btnDelete" data-id="@item.ID" title="Xóa danh mục"><i class="fa fa-times"></i>Xóa</button>
                                            </td>
                                        </tr>
                                        dem++;
                                    }
                                </tbody>
                            </table>
                            Trang @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) / @Model.PageCount
                            @*@Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))*@
                            <ul class="pagination">
                                @for (int i = 1; i <= Model.PageCount; i++)
                                {
                                    <li class="@(i == Model.PageNumber ? "page-item active" : "page-item")">
                                        <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                    </li>

                                }
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal add-->
        <div class="modal fade" id="addCate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Thêm mới danh mục sản phẩm</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("addCate", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <div class="form-group">
                                <label for="recipient-name" class="col-form-label">Tên danh mục:</label>
                                <input type="text" name="Name" class="form-control" required autofocus>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary btn-lg">Thêm mới</button>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal Edit-->
        <div class="modal fade editCate" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Sửa danh mục sản phẩm</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("editCate", "Category", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <input type="hidden" name="ID" id="ID" />
                            <div class="form-group">
                                <label for="recipient-name" class="col-form-label">Tên danh mục:</label>
                                <input type="text" name="Name" id="Edit_Name" class="form-control" required autofocus>
                            </div>

                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">Cập nhật</button>
                            </div>
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section jsAdmin{

    <script type="text/javascript">
        $(function () {
            //nếu không có thao tác gì thì ẩn đi
            $('#AlertBox').removeClass('hide');

            //Sau khi hiển thị lên thì delay 1s và cuộn lên trên sử dụng slideup
            $('#AlertBox').delay(2000).slideUp(500);


            $('.btnDelete').off('click').on('click', function () {
                const notice = PNotify.notice({
                    title: 'Thông báo',
                    text: 'Bạn thật sự muốn xóa?',
                    icon: 'fa fa-question-circle',
                    width: '360px',
                    minHeight: '110px',
                    hide: false,
                    closer: false,
                    sticker: false,
                    destroy: true,
                    stack: new PNotify.Stack({
                        dir1: 'down',
                        modal: true,
                        firstpos1: 25,
                        overlayClose: false
                    }),
                    modules: new Map([
                        ...PNotify.defaultModules,
                        [PNotifyConfirm, {
                            confirm: true
                        }]
                    ])
                });

                notice.on('pnotify:confirm', () =>
                    $.ajax({
                        data: { ID: $(this).data('id') },
                        url: '/Category/Delete',
                        dataType: 'Json',
                        type: 'POST',
                        success: function (res) {
                            if (res.status == true) {
                                window.location.href = "/Category";
                                PNotify.success({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa danh mục thành công.'
                                });
                            } else {

                                PNotify.error({
                                    title: 'THÔNG BÁO!!',
                                    text: 'Xóa danh mục KHÔNG thành công. Bạn vui lòng xóa các sản phẩm thuộc danh mục trước.'
                                });
                            }
                        }
                    })

                );


            });

            $('.btnEdit').click(function(event) {
                $('.editCate').modal('show');
                //alert($(this).data('id'));
                var ID = $(this).data('id');
                $.ajax({
                        url: "/Category/GetCateByID/" + ID,
                        type: 'GET',
                        dataType: 'json',
                        contentType: "application/json; charset=utf-8",
                        success: function (res) {
                            $('#Edit_Name').val(res.Name);
                            $('#ID').val(res.ID);
                        }
                    });
            });
        });
    </script>

}



